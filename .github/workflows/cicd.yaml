name: pyjokes-app-cicd-pipeline
on:
  push:
    branches:
      - "ecr-repo"

jobs:
  # Linting Jobs
  linting:
    runs-on: ubuntu-latest
    steps:
      - name: Clone Repository
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.12'

      - name: Install dependencies
        run: |
          pip install -r requirements.txt

      - name: Lint code
        run: |
          flake8 .
  
  # Test Job
  testing:
    runs-on: ubuntu-latest
    needs: linting
    steps:
      - name: Clone Repository
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.12'

      - name: Install dependencies
        run: |
          pip install -r requirements.txt
      - name: Run tests
        run: |
          pytest 

  # Build docker image and push to ECR repository
  build-and-push:
    runs-on: ubuntu-latest
    needs: testing
    steps:
      - name: Clone Repository
        uses: actions/checkout@v2
      
      - name: Build Image
        run: |
          docker build -t "${{ vars.DOCKERHUB_USERNAME }}/${{ vars.APP_NAME }}:v0.1.${{ github.run_number }}" .
          docker build -t "${{ vars.DOCKERHUB_USERNAME }}/${{ vars.APP_NAME }}:latest" .

      - name: Login to Dockerhub
        uses: docker/login-action@v1
        with:
          username: ${{ vars.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      - name: Push Image to Dockerhub
        run: |
          docker push "${{ vars.DOCKERHUB_USERNAME }}/${{ vars.APP_NAME }}:v0.1.${{ github.run_number }}"
          docker push "${{ vars.DOCKERHUB_USERNAME }}/${{ vars.APP_NAME }}:latest"

  # Update Helm Chart from other repository
  Update-Helm-Chart:
    needs: build-and-push 
    runs-on: ubuntu-latest
    steps:
      - name: Helm Repository Clone
        uses: actions/checkout@v2
        with:
          repository: EdagPSIT/jokes-app-helm-chart.git
          ref: ecr
          token: ${{ secrets.GIT_TOKEN }}

      - name: Update values.yaml
        uses: rmeneely/update-yaml@v1
        env: 
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        with:
          infile: values.yaml
          varlist: 'image.tag=v0.1.${{ github.run_number }}'

      - name: Commit Changes
        run: |
          git config --global user.name "EdagPSIT"
          git config --global user.email "vhanamaneramesh@gmail.com"
          git add values.yaml
          git commit -m "Update values.yaml for v0.1.${{ github.run_number }}"
      
      - name: Push Changes to Repository
        run: |
          git push origin ecr